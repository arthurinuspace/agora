version: '3.8'

services:
  agora:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: agora-app-prod
    ports:
      - "80:8000"
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - DATABASE_URL=postgresql://agora:${POSTGRES_PASSWORD}@postgres:5432/agora
      - DEBUG=False
      - PORT=8000
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - agora-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:15-alpine
    container_name: agora-postgres-prod
    environment:
      - POSTGRES_DB=agora
      - POSTGRES_USER=agora
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: always
    networks:
      - agora-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: agora-redis-prod
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - agora-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: agora-nginx-prod
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - agora
    restart: always
    networks:
      - agora-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  agora-network:
    driver: bridge