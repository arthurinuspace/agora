version: '3.8'

services:
  agora:
    build: .
    container_name: agora-app
    ports:
      - "8000:8000"
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - DATABASE_URL=sqlite:///./data/agora.db
      - DEBUG=${DEBUG:-False}
      - PORT=8000
    volumes:
      - agora_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - agora-network

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: agora-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - agora-network

  # Optional: PostgreSQL for production database
  postgres:
    image: postgres:15-alpine
    container_name: agora-postgres
    environment:
      - POSTGRES_DB=agora
      - POSTGRES_USER=agora
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agora_secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - agora-network

volumes:
  agora_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  agora-network:
    driver: bridge